.header {
    height: 120px;
    background-image: linear-gradient(0, #fe6433, #f53e2d);
}

/* Navbar CSS */

.header__navbar {
    display: flex;
    justify-content: space-between;
}

.header__navbar-list {
    list-style: none;
    padding-left: 0;
    margin: 4px 0 0;
}

.header__navbar-item {
    display: inline-block;
    margin: 0 8px;
    font-size: 1.3rem;
    position: relative;
    min-height: 26px;
}

.header__navbar-item-link {
    text-decoration: none;
}

.header__navbar-item, 
.header__navbar-item-link {
    color: var(--white-color);
    font-weight: 300;
}

.header__navbar-item:hover, 
.header__navbar-item-link:hover,
.header__navbar-icon-link:hover {
    cursor: pointer;
    color: rgba(255, 255, 255, 0.7);
}

.header__navbar-item--bold {
    font-weight: 500;
}

/* Tạo dấu phân cách sau một số phần tử */
.header__navbar-item--separate::after {
    content: "";
    display: block;
    position: absolute;

    /* Cách thứ 1 để tạo dấu phân cách */
    /* width: 1px;
    height: 12px;
    background-color: #fb9086; */
    /* Cách thứ 2 để tạo dấu phân cách*/
    border-left: 1px solid #fb9086;
    height: 16px;

    /* Căn dấu phân cách về đúng vị trí */
    right: -8px;
    top: 50%; 
    /* top: 50% sẽ kéo dấu phân cách xuống, dùng transform: translateY(-50%);*/
    /* Vì đang di chuyển theo chiều dọc nên dùng translateY */
    /* transform: translateY(-50%) được hiểu là -50% kích thước của chính nó, 
    tức là -50% của height ở trên, nên sẽ quay ngược lên */
    transform: translateY(-50%);
}

.header__navbar-icon-link {
    color: var(--white-color);
    text-decoration: none;
    margin-left: 3px;
}

.header__navbar-icon {
    font-size: 1.8rem;
    margin: 0 4px;
}

.header__navbar-item, 
.header__navbar-item-link,
.header__navbar-icon-link {
    display: inline-flex;
    align-items: center;
}

.header__navbar-title--no-pointer {
    cursor: text;
    color: var(--white-color);
}

/* QR Code CSS */
.header__qr {
    width: 185px;
    background-color: var(--white-color);
    position: absolute;

    /* top: 100% tính theo thẻ chứa thuộc tính position: relative (.header__navbar-item) */
    top: 120%;
    left: 0;
    padding: 8px;
    border-radius: 2px;
    display: none;

    /* Sử dụng animation đã viết ở file base.css */
    animation: fadeIn ease-in 0.25s;
}

/* Những css viết ở dưới sẽ được apply vào header__qr trong trường hợp header__navbar-item--appear-qr được hover.
header__qr phải là con của header__navbar-item--appear-qr */
.header__navbar-item--appear-qr:hover .header__qr {
    display: block;
}

/* Giải quyết vấn đề hover vào nhưng kéo xuống sẽ mất bảng QR Code */
.header__qr::before {
    width: 100%;
    height: 20px;

    position: absolute;
    top: -16px;
    left: 0;
    content: "";
    display: block;
}

.header__qr-img {
    width: 100%;
}

.header__qr-apps {
    display: flex;
    justify-content: space-between;
}

/* Sử dụng lớp giả nth-child để xác định thứ tự các phần tử con.
Ở trường hợp này có 2 child nên có thể dùng first-child và last-child */
.header__qr-link:nth-child(1) {
    margin-left: 10px;
}

.header__qr-link:nth-child(2) {
    margin-right: 10px;
}

.header__qr-download-img {
    height: 15px;
}

/* Header Notification */
.header__notify {
    position: absolute;
    top: 120%;
    right: 0;
    width: 400px;
    border: 1px solid #d3d3d3;
    background-color: var(--white-color);
    cursor: default;
    display: none;

    animation: headerNotify ease-in 0.2s;
    /* Thuộc tính transfrom-origin giúp thay đổi tâm của một phần tử dùng animation */
    transform-origin: calc(100% - 20px) top;
}

/* Những css viết ở dưới sẽ được apply vào header__notify trong trường hợp header__navbar-item--appear-notify được hover.
header__qr phải là con của header__navbar-item--appear-qr */
.header__navbar-item--appear-notify:hover .header__notify {
    display: block;
}

@keyframes headerNotify {
    from {
        opacity: 0;
        transform: scale(0);
    } to {
        opacity: 1;
        transform: scale(1);
    }
}

.header__notify-header {
    height: 40px;
    background-color: var(--white-color);
}

.header__notify-header h3 {
    color: #999;
    margin: 0 0 0 12px;
    font-weight: 400;
    font-size: 1.4rem;
    line-height: 40px;
    /* Có thể thêm thuộc tính user-select: none; để không cho người dùng select 1 thứ gì đó */
}

.header__notify-list {
    padding-left: 0;
}

.header__notify-item {
    display: flex;
}

.header__notify-item:hover {
    background-color: #f7f7f7;
}

.header__notify-item--unread {
    background-color: rgba(238, 77, 45, 0.1);
}

.header__notify-link {
    display: flex;
    width: 100%;
    padding: 12px;
    text-decoration: none;
}

.header__notify-img {
    width: 48px;
    /* Dùng object-fit: contain để xử lý việc ảnh bị méo do dùng flexbox */
    object-fit: contain;
}

.header__notify-info {
    margin-left: 12px;
}

.header__notify-name {
    display: block;
    color: var(--text-color);
    font-size: 1.4rem;
    font-weight: 400;
    line-height: 1.8rem;
}

.header__notify-desc {
    display: block;
    font-size: 1.2rem;
    line-height: 1.6rem;
    color: #765f6e;
    margin-top: 4px;
}

.header__notify-view-all {
    /* Sử dụng text-align: center; sẽ làm cho btn ở dưới ko thể padding được.
    Trong trường hợp này chúng ta sẽ dùng flexbox để căn giữa */
    display: flex;
}

.header__notify-view-all-btn {
    text-decoration: none;
    color: var(--text-color);
    /* width: 100%; để người dùng có thể bấm vào nút "Xem tất cả" dễ hơn */
    width: 100%;
    padding: 8px 0;
    font-size: 1.4rem;
    font-weight: 400;
    text-align: center;
    /* Nếu không sử dụng display: flex; ở phía trên thì có thể dùng display: block; ở class này. 
    Kết quả cho ra tương tự */
}

