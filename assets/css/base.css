/* Nơi khai báo biến css */
:root {
    --primary-color: #ee4d2d;
    --white-color: #fff;
    --black-color: #000;
    --text-color: #333;
    --border-color: #dbdbdb;

    --navbar-height: 36px;
    --header-height: 120px;
    --header-search-height: calc(var(--header-height) - var(--navbar-height));
}

* {
    box-sizing: inherit;
}

html {
    font-size: 62.5%;
    line-height: 1.6rem;
    font-family: 'Roboto', sans-serif;
    box-sizing: border-box;
}

/* Phần chuẩn bị cho responsive */
.grid {
    width: 1200px;
    max-width: 100%;
    margin: 0 auto;
}

/* Trong trường hợp ko muốn sử dụng width: 1200px thì thêm class grid__full-width ở dưới vào */
.grid__full-width {
    width: 100%;
}

/* Những thẻ dùng class grid__row sẽ nằm cùng trên 1 hàng ngang nhờ display: flex */
.grid__row {
    display: flex;
    flex-wrap: wrap;
}

/* Animation */
@keyframes fadeIn {
    from {
        opacity: 0;
    } to {
        opacity: 1;
    } 
}

@keyframes growth {
    from {
        transform: scale(var(--growth-from));
    } to {
        transform: scale(var(--growth-to));
    }
}

/* Modal CSS */
.modal {
    /* Làm cho phần modal chiếm hết màn hình */
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    display: flex;
    
    /* Lầm animation cho phần modal */
    animation: fadeIn linear 0.1s;
}

.modal__overlay {
    position: absolute;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.33333333333333)
}

.modal__body {
    margin: auto;
    /* Vì lớp body nằm dưới lớp overlay do lớp overlay dùng thuộc tính position khiến lớp overlay nằm trên một lớp cao hơn
    Cách giải quyết là thêm thuộc tính position vào phần body*/
    position: relative;
    /* Để chắc chắn, chúng ta dùng thuộc tính z-index và cho giá trị z-index ở body cao hơn giá trị z-index ở overlay.
    Mặc định giá trị z-index ở overlay = 0 nếu không dùng thuộc tính z-index */
    z-index: 1;

    /* Tạo ra 2 biến cho animation */
    --growth-from: 0.7;
    --growth-to: 1;
    animation: growth linear 0.1s;
}

/* Button css */
.btn {
    min-width: 142px;
    height: 34px;
    /* Đề phòng class này đc dùng cho thẻ a, nên dùng text-decoration: none */
    text-decoration: none;
    border: none;
    border-radius: 2px;
    font-size: 1.5rem;
    padding: 0 12px;
    outline: none;
    cursor: pointer;
    color: var(--text-color);
    background-color: var(--white-color);

    display: flex;
    align-items: center;
    justify-content: center;

    /* Để line-height số chẵn để tạm thời fix căn giữa cho nút */
    line-height: 1.6rem;
}

.btn.btn--normal:hover {
    background-color: rgba(0, 0, 0, 0.05);
}

.btn.btn--pc {
    height: 32px;
    font-size: 1.2rem;
    padding: 0 8px;
}

/* CSS dưới đc hiểu là select tới 1 thẻ có cả 2 class btn và btn--primary (viết liền ko dấu cách) */
.btn.btn--primary {
    color: var(--white-color);
    background-color: var(--primary-color);
}

/* Đôi khi chúng ta cần vô hiệu hóa một vài nút, tạo class btn--disable để làm điều này */
.btn.btn--disable {
    cursor: not-allowed;
    color: rgba(0, 0, 0, 0.26);
}